{
  "openapi": "3.0.1",
  "info": {
    "title": "Partners API",
    "description": "## Getting Started\n\n<details>\n<summary>Initial Setup</summary>\n\nA valid email address is required to use Tattle's Partner API.\nUpon approval to use our API, you will receive an email from _noreply@gettattle.com_ with a temporary password.\nYou should change your password immediately by using our _/auth/change-password_` endpoint. Please securely store this password.\n</details>\n\n<details>\n<summary>Authentication</summary>\n\nThe `/auth/token` endpoint is used to get an access token. This access token allows you to make authorized requests to our API.\nYou can use your _username_ and _refreshToken_ to refresh your current access token (See the `/auth/refresh` endpoint.)\n\n**Password Change Limits**\n\nFor security reasons, there is a limit on the `auth/change-password` endpoint:\n- Maximum of 5 consecutive password changes per hour\n- After reaching this limit, you must wait for the hour to reset before making additional password changes\n\n</details>\n\n<details>\n<summary>Authorized API Requests</summary>\n\nSet the Authorization header on the request following the Bearer authentication scheme with your access token.\nExample: _Authorization: Bearer my_access_token_here_\n</details>\n\n<details>\n<summary>Webhooks (BETA)</summary>\n\nWebhooks can be subscribed to, per merchant. An HTTP POST request will be made to the webhook url provided. The _Authorization_ header value will be set to the value provided when configuring your webhook subscription settings.\n</details>\n\n<details>\n<summary>Generating Feedback Request URLs</summary>\n\nPartners can generate custom feedback request URLs to send directly to customers. This allows you to integrate feedback requests into your own communication channels.\n\nTo create a feedback request URL:\n\n1. Use the following base URL structure:\n\n   ```\n   https://tattleapp.com/[slug]?questionnaireId=[id]&email=[customer_email]&date=[timestamp]&ref=[reference]&externalOrderId=[order_id]\n   ```\n\n2. Replace the placeholders with actual values:\n\n    - `[slug]`: The unique identifier for the merchant, group, or location (e.g., `location2-9843-slug`)\n    - `[id]`: The questionnaire ID (e.g., `16933`)\n    - `[customer_email]`: The customer's email address\n    - `[timestamp]`: The local date and time of the order in ISO 8601 format (e.g., `2024-09-19T10:54:27`)\n    - `[reference]`: The source of the order (e.g., `olo`)\n    - `[order_id]`: Your system's unique order identifier (e.g., `1726757678`)\n\n**Example URL**\n\n```\nhttps://tattleapp.com/location2-9843-slug?questionnaireId=16933&email=customer@example.com&date=2024-09-19T10:54:27&ref=olo&externalOrderId=1726757678\n```\n\n**Important: Preventing Duplicate Emails**\n\nTo prevent customers from receiving duplicate emails, disable Tattle's automatic email sending:\n\n1. Log in to the Merchant Dashboard\n2. Navigate to Account Setup > Survey Configuration > Feedback Requests\n3. Check the box labeled \"Disable sending customer feedback request emails\"\n\nThis setting ensures that only your custom-generated URLs will trigger feedback requests.\n</details>\n",
    "version": "v1"
  },
  "servers": [
    {
      "url": "/partners/api"
    }
  ],
  "paths": {
    "/auth/token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Authenticate with your username and password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationRequest"
              },
              "example": {"email":"test@email.com","password":"mys3cur3passw0rd"}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationRequest"
              },
              "example": {"email":"test@email.com","password":"mys3cur3passw0rd"}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationRequest"
              },
              "example": {"email":"test@email.com","password":"mys3cur3passw0rd"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                },
                "example": {"accessToken":"access_token","expiresIn":86400,"refreshToken":"refresh_token"}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.4","title":"Resource Not Found","status":404,"detail":"The requested resource does not exist or has been moved. Please verify the URL and try again."}
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Refresh your access with your username and password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              },
              "example": {"email":"test@email.com","refreshToken":"refresh_token"}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              },
              "example": {"email":"test@email.com","refreshToken":"refresh_token"}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              },
              "example": {"email":"test@email.com","refreshToken":"refresh_token"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                },
                "example": {"accessToken":"access_token","expiresIn":86400,"refreshToken":"refresh_token"}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.4","title":"Resource Not Found","status":404,"detail":"The requested resource does not exist or has been moved. Please verify the URL and try again."}
              }
            }
          }
        }
      }
    },
    "/auth/change-password": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Changes the password with your existing username and password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              },
              "example": {"email":"test@email.com","oldPassword":"mys3cur3passw0rd","newPassword":"my-new-s3cur3passw0rd"}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              },
              "example": {"email":"test@email.com","oldPassword":"mys3cur3passw0rd","newPassword":"my-new-s3cur3passw0rd"}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              },
              "example": {"email":"test@email.com","oldPassword":"mys3cur3passw0rd","newPassword":"my-new-s3cur3passw0rd"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      }
    },
    "/channels": {
      "get": {
        "tags": [
          "Channels"
        ],
        "summary": "Get paginated channels",
        "parameters": [
          {
            "name": "MerchantId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChannelsResponsePageResponse"
                },
                "example": {"currentPage":1,"pageSize":25,"hasNextPage":false,"data":[{"id":1,"label":"Dine-In","description":""},{"id":2,"label":"Take-Out","description":""}],"total":null,"totalPages":null}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      }
    },
    "/delivery-services": {
      "get": {
        "tags": [
          "Delivery Services"
        ],
        "summary": "Get paginated delivery service partners",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPartnerResponsePageResponse"
                },
                "example": {"currentPage":1,"pageSize":25,"hasNextPage":false,"data":[{"id":22,"label":"Uber Eats","ref":"ubereats"},{"id":23,"label":"Doordash","ref":"doordash"}],"total":null,"totalPages":null}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      }
    },
    "/groups": {
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Create a Group for a given merchant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertGroupRequest"
              },
              "example": {"label":"example","slug":"example-slug","color":"#0071E8","merchantId":10,"description":"This is an example.","active":true,"private":true}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertGroupRequest"
              },
              "example": {"label":"example","slug":"example-slug","color":"#0071E8","merchantId":10,"description":"This is an example.","active":true,"private":true}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertGroupRequest"
              },
              "example": {"label":"example","slug":"example-slug","color":"#0071E8","merchantId":10,"description":"This is an example.","active":true,"private":true}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGroupsResponse"
                },
                "example": {"id":10,"label":"East Coast","description":"All location on the East Coast","slug":"east-coast","active":true,"color":"#788AAF","private":null,"locationIds":[100,101],"userIds":[2000,2001]}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.8","title":"Conflict","status":409,"detail":"The request conflicts with the current state of the resource. The resource may have been modified by another request."}
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get paginated groups",
        "parameters": [
          {
            "name": "MerchantId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGroupsResponsePageResponse"
                },
                "example": {"currentPage":1,"pageSize":25,"hasNextPage":false,"data":[{"id":10,"label":"East Coast","description":"All locations on the East Coast","slug":"east-coast","active":true,"color":"#788AAF","private":null,"locationIds":[100,101],"userIds":[2000,2001]}],"total":null,"totalPages":null}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      }
    },
    "/groups/{groupId}": {
      "put": {
        "tags": [
          "Groups"
        ],
        "summary": "Edit a Group for a given merchant",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertGroupRequest"
              },
              "example": {"label":"example","slug":"example-slug","color":"#0071E8","merchantId":10,"description":"This is an example.","active":true,"private":true}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertGroupRequest"
              },
              "example": {"label":"example","slug":"example-slug","color":"#0071E8","merchantId":10,"description":"This is an example.","active":true,"private":true}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertGroupRequest"
              },
              "example": {"label":"example","slug":"example-slug","color":"#0071E8","merchantId":10,"description":"This is an example.","active":true,"private":true}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGroupsResponse"
                },
                "example": {"id":10,"label":"East Coast","description":"All location on the East Coast","slug":"east-coast","active":true,"color":"#788AAF","private":null,"locationIds":[100,101],"userIds":[2000,2001]}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.4","title":"Resource Not Found","status":404,"detail":"The requested resource does not exist or has been moved. Please verify the URL and try again."}
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.8","title":"Conflict","status":409,"detail":"The request conflicts with the current state of the resource. The resource may have been modified by another request."}
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Groups"
        ],
        "summary": "Delete a Group for a given merchant",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteGroupRequest"
              },
              "example": {"merchantId":10}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteGroupRequest"
              },
              "example": {"merchantId":10}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteGroupRequest"
              },
              "example": {"merchantId":10}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.4","title":"Resource Not Found","status":404,"detail":"The requested resource does not exist or has been moved. Please verify the URL and try again."}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.4","title":"Resource Not Found","status":404,"detail":"The requested resource does not exist or has been moved. Please verify the URL and try again."}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.4","title":"Resource Not Found","status":404,"detail":"The requested resource does not exist or has been moved. Please verify the URL and try again."}
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get group by id",
        "operationId": "GetGroupById",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGroupsResponse"
                },
                "example": {"id":10,"label":"East Coast","description":"All location on the East Coast","slug":"east-coast","active":true,"color":"#788AAF","private":null,"locationIds":[100,101],"userIds":[2000,2001]}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.4","title":"Resource Not Found","status":404,"detail":"The requested resource does not exist or has been moved. Please verify the URL and try again."}
              }
            }
          }
        }
      }
    },
    "/groups/{groupId}/locations": {
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Add location to a group",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddLocationToGroupRequest"
              },
              "example": {"merchantId":1,"groupId":10,"locationId":100}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddLocationToGroupRequest"
              },
              "example": {"merchantId":1,"groupId":10,"locationId":100}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddLocationToGroupRequest"
              },
              "example": {"merchantId":1,"groupId":10,"locationId":100}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGroupsResponse"
                },
                "example": {"id":10,"label":"East Coast","description":"All location on the East Coast","slug":"east-coast","active":true,"color":"#788AAF","private":null,"locationIds":[100,101],"userIds":[2000,2001]}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Groups"
        ],
        "summary": "Remove location from a group",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveLocationFromGroupRequest"
              },
              "example": {"merchantId":1,"groupId":10,"locationId":100}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveLocationFromGroupRequest"
              },
              "example": {"merchantId":1,"groupId":10,"locationId":100}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveLocationFromGroupRequest"
              },
              "example": {"merchantId":1,"groupId":10,"locationId":100}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGroupsResponse"
                },
                "example": {"id":10,"label":"East Coast","description":"All location on the East Coast","slug":"east-coast","active":true,"color":"#788AAF","private":null,"locationIds":[100,101],"userIds":[2000,2001]}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      }
    },
    "/groups/{groupId}/users": {
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Add user to a group",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUserToGroupRequest"
              },
              "example": {"merchantId":1,"groupId":10,"userId":100}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddUserToGroupRequest"
              },
              "example": {"merchantId":1,"groupId":10,"userId":100}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddUserToGroupRequest"
              },
              "example": {"merchantId":1,"groupId":10,"userId":100}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGroupsResponse"
                },
                "example": {"id":10,"label":"East Coast","description":"All location on the East Coast","slug":"east-coast","active":true,"color":"#788AAF","private":null,"locationIds":[100,101],"userIds":[2000,2001]}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Groups"
        ],
        "summary": "Remove user from a group",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserFromGroupRequest"
              },
              "example": {"merchantId":1,"groupId":10,"userId":100}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserFromGroupRequest"
              },
              "example": {"merchantId":1,"groupId":10,"userId":100}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserFromGroupRequest"
              },
              "example": {"merchantId":1,"groupId":10,"userId":100}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGroupsResponse"
                },
                "example": {"id":10,"label":"East Coast","description":"All location on the East Coast","slug":"east-coast","active":true,"color":"#788AAF","private":null,"locationIds":[100,101],"userIds":[2000,2001]}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      }
    },
    "/incidents": {
      "get": {
        "tags": [
          "Incidents"
        ],
        "summary": "Returns a paginated list of incidents within a specified time range.",
        "parameters": [
          {
            "name": "MerchantId",
            "in": "query",
            "description": "The unique identifier of the merchant for which incidents are being retrieved.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDateExperiencedLocal",
            "in": "query",
            "description": "Full-date notation as defined by RFC 3339, section 5.6, for example, 2017-07-21",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "EndDateExperiencedLocal",
            "in": "query",
            "description": "Full-date notation as defined by RFC 3339, section 5.6, for example, 2017-07-21",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentDtoPageResponse"
                },
                "example": {"currentPage":1,"pageSize":25,"hasNextPage":true,"data":[{"id":1,"merchantId":100,"uid":"INC-001","locationId":1001,"rewardCodes":[{"id":1,"code":"REWARD123","rewardId":5001,"isRedeemed":true,"dateTimeRedeemedUtc":"2025-06-26T00:52:19.1800674Z","dateTimeAssignedUtc":"2025-06-22T00:52:19.1800841Z","dateTimeExpiredUtc":"2025-07-27T00:52:19.1800842Z"}],"survey":{"id":10001,"questionnaireId":1234,"orderId":"abcd-123-0a","locationId":1001,"channelId":1,"createdDateTimeUtc":"2025-06-26T22:52:19.1825462Z","experienceDateTimeLocal":"2025-06-26T21:52:19.1825751Z","rating":4,"score":80,"phoneNumber":null,"emailAddress":null,"snapshots":[{"snapshotId":1,"label":"Overall Experience","rating":4,"comment":"Good service, but room for improvement","reasons":[{"reasonId":1,"label":"Service Speed","impact":2}]}],"questions":[{"questionId":1,"questionText":"How likely are you to recommend us?","answerId":4,"answerText":"Very likely"}]},"dateTimeReviewedUtc":"2025-06-27T00:22:19.1828112Z","dateTimeMessagedUtc":"2025-06-27T00:27:19.1828193Z","dateTimeResolvedUtc":"2025-06-27T00:37:19.1828194Z","dateTimeRecoveredUtc":"2025-06-27T00:42:19.1828195Z","dateTimeNotificationUtc":"2025-06-27T00:47:19.1828195Z"}],"total":1,"totalPages":1}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentDtoPageResponse"
                },
                "example": {"currentPage":1,"pageSize":25,"hasNextPage":true,"data":[{"id":1,"merchantId":100,"uid":"INC-001","locationId":1001,"rewardCodes":[{"id":1,"code":"REWARD123","rewardId":5001,"isRedeemed":true,"dateTimeRedeemedUtc":"2025-06-26T00:52:19.1800674Z","dateTimeAssignedUtc":"2025-06-22T00:52:19.1800841Z","dateTimeExpiredUtc":"2025-07-27T00:52:19.1800842Z"}],"survey":{"id":10001,"questionnaireId":1234,"orderId":"abcd-123-0a","locationId":1001,"channelId":1,"createdDateTimeUtc":"2025-06-26T22:52:19.1825462Z","experienceDateTimeLocal":"2025-06-26T21:52:19.1825751Z","rating":4,"score":80,"phoneNumber":null,"emailAddress":null,"snapshots":[{"snapshotId":1,"label":"Overall Experience","rating":4,"comment":"Good service, but room for improvement","reasons":[{"reasonId":1,"label":"Service Speed","impact":2}]}],"questions":[{"questionId":1,"questionText":"How likely are you to recommend us?","answerId":4,"answerText":"Very likely"}]},"dateTimeReviewedUtc":"2025-06-27T00:22:19.1828112Z","dateTimeMessagedUtc":"2025-06-27T00:27:19.1828193Z","dateTimeResolvedUtc":"2025-06-27T00:37:19.1828194Z","dateTimeRecoveredUtc":"2025-06-27T00:42:19.1828195Z","dateTimeNotificationUtc":"2025-06-27T00:47:19.1828195Z"}],"total":1,"totalPages":1}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentDtoPageResponse"
                },
                "example": {"currentPage":1,"pageSize":25,"hasNextPage":true,"data":[{"id":1,"merchantId":100,"uid":"INC-001","locationId":1001,"rewardCodes":[{"id":1,"code":"REWARD123","rewardId":5001,"isRedeemed":true,"dateTimeRedeemedUtc":"2025-06-26T00:52:19.1800674Z","dateTimeAssignedUtc":"2025-06-22T00:52:19.1800841Z","dateTimeExpiredUtc":"2025-07-27T00:52:19.1800842Z"}],"survey":{"id":10001,"questionnaireId":1234,"orderId":"abcd-123-0a","locationId":1001,"channelId":1,"createdDateTimeUtc":"2025-06-26T22:52:19.1825462Z","experienceDateTimeLocal":"2025-06-26T21:52:19.1825751Z","rating":4,"score":80,"phoneNumber":null,"emailAddress":null,"snapshots":[{"snapshotId":1,"label":"Overall Experience","rating":4,"comment":"Good service, but room for improvement","reasons":[{"reasonId":1,"label":"Service Speed","impact":2}]}],"questions":[{"questionId":1,"questionText":"How likely are you to recommend us?","answerId":4,"answerText":"Very likely"}]},"dateTimeReviewedUtc":"2025-06-27T00:22:19.1828112Z","dateTimeMessagedUtc":"2025-06-27T00:27:19.1828193Z","dateTimeResolvedUtc":"2025-06-27T00:37:19.1828194Z","dateTimeRecoveredUtc":"2025-06-27T00:42:19.1828195Z","dateTimeNotificationUtc":"2025-06-27T00:47:19.1828195Z"}],"total":1,"totalPages":1}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      }
    },
    "/incidents/{incidentId}": {
      "get": {
        "tags": [
          "Incidents"
        ],
        "summary": "Returns an incident by id",
        "parameters": [
          {
            "name": "incidentId",
            "in": "path",
            "description": "The incident's unique identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentDto"
                },
                "example": {"id":1,"merchantId":100,"uid":"INC-001","locationId":1001,"rewardCodes":[{"id":1,"code":"REWARD123","rewardId":5001,"isRedeemed":true,"dateTimeRedeemedUtc":"2025-06-26T00:52:19.2902126Z","dateTimeAssignedUtc":"2025-06-22T00:52:19.2902149Z","dateTimeExpiredUtc":"2025-07-27T00:52:19.290215Z"}],"survey":{"id":10001,"questionnaireId":1234,"orderId":"abcd-123-0a","locationId":1001,"channelId":1,"createdDateTimeUtc":"2025-06-26T22:52:19.2902209Z","experienceDateTimeLocal":"2025-06-26T21:52:19.2902217+00:00","rating":4,"score":80,"phoneNumber":null,"emailAddress":null,"snapshots":[{"snapshotId":1,"label":"Overall Experience","rating":4,"comment":"Good service, but room for improvement","reasons":[{"reasonId":1,"label":"Service Speed","impact":2}]}],"questions":[{"questionId":1,"questionText":"How likely are you to recommend us?","answerId":4,"answerText":"Very likely"}]},"dateTimeReviewedUtc":"2025-06-27T00:22:19.2902249Z","dateTimeMessagedUtc":"2025-06-27T00:27:19.2902258Z","dateTimeResolvedUtc":"2025-06-27T00:37:19.2902258Z","dateTimeRecoveredUtc":"2025-06-27T00:42:19.2902259Z","dateTimeNotificationUtc":"2025-06-27T00:47:19.290226Z"}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentDto"
                },
                "example": {"id":1,"merchantId":100,"uid":"INC-001","locationId":1001,"rewardCodes":[{"id":1,"code":"REWARD123","rewardId":5001,"isRedeemed":true,"dateTimeRedeemedUtc":"2025-06-26T00:52:19.2902126Z","dateTimeAssignedUtc":"2025-06-22T00:52:19.2902149Z","dateTimeExpiredUtc":"2025-07-27T00:52:19.290215Z"}],"survey":{"id":10001,"questionnaireId":1234,"orderId":"abcd-123-0a","locationId":1001,"channelId":1,"createdDateTimeUtc":"2025-06-26T22:52:19.2902209Z","experienceDateTimeLocal":"2025-06-26T21:52:19.2902217+00:00","rating":4,"score":80,"phoneNumber":null,"emailAddress":null,"snapshots":[{"snapshotId":1,"label":"Overall Experience","rating":4,"comment":"Good service, but room for improvement","reasons":[{"reasonId":1,"label":"Service Speed","impact":2}]}],"questions":[{"questionId":1,"questionText":"How likely are you to recommend us?","answerId":4,"answerText":"Very likely"}]},"dateTimeReviewedUtc":"2025-06-27T00:22:19.2902249Z","dateTimeMessagedUtc":"2025-06-27T00:27:19.2902258Z","dateTimeResolvedUtc":"2025-06-27T00:37:19.2902258Z","dateTimeRecoveredUtc":"2025-06-27T00:42:19.2902259Z","dateTimeNotificationUtc":"2025-06-27T00:47:19.290226Z"}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IncidentDto"
                },
                "example": {"id":1,"merchantId":100,"uid":"INC-001","locationId":1001,"rewardCodes":[{"id":1,"code":"REWARD123","rewardId":5001,"isRedeemed":true,"dateTimeRedeemedUtc":"2025-06-26T00:52:19.2902126Z","dateTimeAssignedUtc":"2025-06-22T00:52:19.2902149Z","dateTimeExpiredUtc":"2025-07-27T00:52:19.290215Z"}],"survey":{"id":10001,"questionnaireId":1234,"orderId":"abcd-123-0a","locationId":1001,"channelId":1,"createdDateTimeUtc":"2025-06-26T22:52:19.2902209Z","experienceDateTimeLocal":"2025-06-26T21:52:19.2902217+00:00","rating":4,"score":80,"phoneNumber":null,"emailAddress":null,"snapshots":[{"snapshotId":1,"label":"Overall Experience","rating":4,"comment":"Good service, but room for improvement","reasons":[{"reasonId":1,"label":"Service Speed","impact":2}]}],"questions":[{"questionId":1,"questionText":"How likely are you to recommend us?","answerId":4,"answerText":"Very likely"}]},"dateTimeReviewedUtc":"2025-06-27T00:22:19.2902249Z","dateTimeMessagedUtc":"2025-06-27T00:27:19.2902258Z","dateTimeResolvedUtc":"2025-06-27T00:37:19.2902258Z","dateTimeRecoveredUtc":"2025-06-27T00:42:19.2902259Z","dateTimeNotificationUtc":"2025-06-27T00:47:19.290226Z"}
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.4","title":"Resource Not Found","status":404,"detail":"The requested resource does not exist or has been moved. Please verify the URL and try again."}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.4","title":"Resource Not Found","status":404,"detail":"The requested resource does not exist or has been moved. Please verify the URL and try again."}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.4","title":"Resource Not Found","status":404,"detail":"The requested resource does not exist or has been moved. Please verify the URL and try again."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      }
    },
    "/localization-codes": {
      "get": {
        "tags": [
          "Localization"
        ],
        "summary": "Get paginated active localization codes",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLocalizationCodeResponsePageResponse"
                },
                "example": {"currentPage":1,"pageSize":25,"hasNextPage":false,"data":[{"localizationsId":18,"code":"en","description":"English"},{"localizationsId":63,"code":"es","description":"Spanish"}],"total":2,"totalPages":1}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      }
    },
    "/locations": {
      "post": {
        "tags": [
          "Locations"
        ],
        "summary": "Create a location",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLocationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLocationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLocationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLocationResponse"
                },
                "example": {"id":10,"label":"My Location","slug":"example-slug","merchantId":50,"managerId":100,"active":false,"address":{"lineOne":"123 Street Lane","lineTwo":null,"city":"Staten Island","state":"NY","zip":"10306","timezone":"America/New_York"},"externalId":"external-id","phoneNumber":"+1 111 1111 1111","localizationsId":1,"isFranchise":true}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.3","title":"Forbidden","status":403,"detail":"You do not have sufficient permissions to access this resource. Please contact your administrator if you believe this is an error."}
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Get paginated locations",
        "parameters": [
          {
            "name": "MerchantId",
            "in": "query",
            "description": "Filter locations using a merchant id.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLocationResponsePageResponse"
                },
                "example": {"currentPage":1,"pageSize":25,"hasNextPage":false,"data":[{"id":10,"label":"My Location","slug":"example-slug","merchantId":50,"managerId":100,"active":false,"address":{"lineOne":"123 Street Lane","lineTwo":null,"city":"Staten Island","state":"NY","zip":"10306","timezone":"America/New_York"},"externalId":"external-id","phoneNumber":"+1 111 1111 1111","localizationsId":1,"isFranchise":true}],"total":null,"totalPages":null}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.3","title":"Forbidden","status":403,"detail":"You do not have sufficient permissions to access this resource. Please contact your administrator if you believe this is an error."}
              }
            }
          }
        }
      }
    },
    "/locations/{locationId}": {
      "put": {
        "tags": [
          "Locations"
        ],
        "summary": "Updates a location",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "description": "The unique identifier of the location.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLocationRequest"
              },
              "example": {"merchantId":1,"label":"Example Label","slug":"example-staten-island","address":{"lineOne":"123 Street Lane","lineTwo":"Corner of Bay Street","lineThree":"Ground Floor","city":"Staten Island","state":"NY","district":"Richmond County","region":"Northeast","country":"US","zip":"10306"},"localizationsId":1,"externalId":"example-label-001","isFranchise":true,"phoneNumber":"111-111-111"}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLocationRequest"
              },
              "example": {"merchantId":1,"label":"Example Label","slug":"example-staten-island","address":{"lineOne":"123 Street Lane","lineTwo":"Corner of Bay Street","lineThree":"Ground Floor","city":"Staten Island","state":"NY","district":"Richmond County","region":"Northeast","country":"US","zip":"10306"},"localizationsId":1,"externalId":"example-label-001","isFranchise":true,"phoneNumber":"111-111-111"}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLocationRequest"
              },
              "example": {"merchantId":1,"label":"Example Label","slug":"example-staten-island","address":{"lineOne":"123 Street Lane","lineTwo":"Corner of Bay Street","lineThree":"Ground Floor","city":"Staten Island","state":"NY","district":"Richmond County","region":"Northeast","country":"US","zip":"10306"},"localizationsId":1,"externalId":"example-label-001","isFranchise":true,"phoneNumber":"111-111-111"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLocationResponse"
                },
                "example": {"id":10,"label":"My Location","slug":"example-slug","merchantId":50,"managerId":100,"active":false,"address":{"lineOne":"123 Street Lane","lineTwo":null,"city":"Staten Island","state":"NY","zip":"10306","timezone":"America/New_York"},"externalId":"external-id","phoneNumber":"+1 111 1111 1111","localizationsId":1,"isFranchise":true}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.3","title":"Forbidden","status":403,"detail":"You do not have sufficient permissions to access this resource. Please contact your administrator if you believe this is an error."}
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Get location by id",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLocationResponse"
                },
                "example": {"id":10,"label":"My Location","slug":"example-slug","merchantId":50,"managerId":100,"active":false,"address":{"lineOne":"123 Street Lane","lineTwo":null,"city":"Staten Island","state":"NY","zip":"10306","timezone":"America/New_York"},"externalId":"external-id","phoneNumber":"+1 111 1111 1111","localizationsId":1,"isFranchise":true}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      }
    },
    "/locations/{locationId}/activate": {
      "put": {
        "tags": [
          "Locations"
        ],
        "summary": "Activate a location",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateLocationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateLocationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateLocationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLocationResponse"
                },
                "example": {"id":10,"label":"My Location","slug":"example-slug","merchantId":50,"managerId":100,"active":false,"address":{"lineOne":"123 Street Lane","lineTwo":null,"city":"Staten Island","state":"NY","zip":"10306","timezone":"America/New_York"},"externalId":"external-id","phoneNumber":"+1 111 1111 1111","localizationsId":1,"isFranchise":true}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.3","title":"Forbidden","status":403,"detail":"You do not have sufficient permissions to access this resource. Please contact your administrator if you believe this is an error."}
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.4","title":"Resource Not Found","status":404,"detail":"The requested resource does not exist or has been moved. Please verify the URL and try again."}
              }
            }
          }
        }
      }
    },
    "/locations/{locationId}/deactivate": {
      "put": {
        "tags": [
          "Locations"
        ],
        "summary": "Deactivate a location",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeactivateLocationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeactivateLocationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeactivateLocationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLocationResponse"
                },
                "example": {"id":10,"label":"My Location","slug":"example-slug","merchantId":50,"managerId":100,"active":false,"address":{"lineOne":"123 Street Lane","lineTwo":null,"city":"Staten Island","state":"NY","zip":"10306","timezone":"America/New_York"},"externalId":"external-id","phoneNumber":"+1 111 1111 1111","localizationsId":1,"isFranchise":true}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.3","title":"Forbidden","status":403,"detail":"You do not have sufficient permissions to access this resource. Please contact your administrator if you believe this is an error."}
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.4","title":"Resource Not Found","status":404,"detail":"The requested resource does not exist or has been moved. Please verify the URL and try again."}
              }
            }
          }
        }
      }
    },
    "/locations/{locationId}/manager": {
      "put": {
        "tags": [
          "Locations"
        ],
        "summary": "Assign or update a manager to a location",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddManagerToLocationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddManagerToLocationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddManagerToLocationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLocationResponse"
                },
                "example": {"id":10,"label":"My Location","slug":"example-slug","merchantId":50,"managerId":100,"active":false,"address":{"lineOne":"123 Street Lane","lineTwo":null,"city":"Staten Island","state":"NY","zip":"10306","timezone":"America/New_York"},"externalId":"external-id","phoneNumber":"+1 111 1111 1111","localizationsId":1,"isFranchise":true}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.3","title":"Forbidden","status":403,"detail":"You do not have sufficient permissions to access this resource. Please contact your administrator if you believe this is an error."}
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.4","title":"Resource Not Found","status":404,"detail":"The requested resource does not exist or has been moved. Please verify the URL and try again."}
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Locations"
        ],
        "summary": "Removes a manager from a location",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveManagerFromLocationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveManagerFromLocationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveManagerFromLocationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLocationResponse"
                },
                "example": {"id":10,"label":"My Location","slug":"example-slug","merchantId":50,"managerId":100,"active":false,"address":{"lineOne":"123 Street Lane","lineTwo":null,"city":"Staten Island","state":"NY","zip":"10306","timezone":"America/New_York"},"externalId":"external-id","phoneNumber":"+1 111 1111 1111","localizationsId":1,"isFranchise":true}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.3","title":"Forbidden","status":403,"detail":"You do not have sufficient permissions to access this resource. Please contact your administrator if you believe this is an error."}
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.4","title":"Resource Not Found","status":404,"detail":"The requested resource does not exist or has been moved. Please verify the URL and try again."}
              }
            }
          }
        }
      }
    },
    "/locations/metrics": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Returns a paginated list of locations, and their associated incident stats for the given time period",
        "parameters": [
          {
            "name": "MerchantId",
            "in": "query",
            "description": "The unique identifier of the merchant for which incidents are being retrieved.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDate",
            "in": "query",
            "description": "Full-date notation as defined by RFC 3339, section 5.6, for example, 2017-07-21",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "description": "Full-date notation as defined by RFC 3339, section 5.6, for example, 2017-07-21.\r\nMaximum date range is three months from start date",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          },
          {
            "name": "Page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "LocationIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          },
          {
            "name": "QuestionnaireIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetIncidentStatisticsResponse"
                },
                "example": {"currentPage":1,"pageSize":10,"hasNextPage":true,"data":[{"location":{"id":10,"label":"Downtown Store","slug":"downtown-store-ny","merchantId":50,"managerId":100,"active":true,"address":{"lineOne":"456 Broadway","lineTwo":null,"city":"New York","state":"NY","zip":"10001","timezone":"America/New_York"},"externalId":"EXT-12345","phoneNumber":"+1 212-555-0199","localizationsId":1,"isFranchise":true},"incidents":{"total":15,"seen":12,"replied":10,"satisfied":8,"recovered":7}},{"location":{"id":20,"label":"Westside Branch","slug":"westside-la","merchantId":60,"managerId":200,"active":true,"address":{"lineOne":"789 Sunset Blvd","lineTwo":null,"city":"Los Angeles","state":"CA","zip":"90028","timezone":"America/Los_Angeles"},"externalId":"EXT-67890","phoneNumber":"+1 310-555-0156","localizationsId":2,"isFranchise":false},"incidents":{"total":20,"seen":18,"replied":15,"satisfied":12,"recovered":10}}]}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetIncidentStatisticsResponse"
                },
                "example": {"currentPage":1,"pageSize":10,"hasNextPage":true,"data":[{"location":{"id":10,"label":"Downtown Store","slug":"downtown-store-ny","merchantId":50,"managerId":100,"active":true,"address":{"lineOne":"456 Broadway","lineTwo":null,"city":"New York","state":"NY","zip":"10001","timezone":"America/New_York"},"externalId":"EXT-12345","phoneNumber":"+1 212-555-0199","localizationsId":1,"isFranchise":true},"incidents":{"total":15,"seen":12,"replied":10,"satisfied":8,"recovered":7}},{"location":{"id":20,"label":"Westside Branch","slug":"westside-la","merchantId":60,"managerId":200,"active":true,"address":{"lineOne":"789 Sunset Blvd","lineTwo":null,"city":"Los Angeles","state":"CA","zip":"90028","timezone":"America/Los_Angeles"},"externalId":"EXT-67890","phoneNumber":"+1 310-555-0156","localizationsId":2,"isFranchise":false},"incidents":{"total":20,"seen":18,"replied":15,"satisfied":12,"recovered":10}}]}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetIncidentStatisticsResponse"
                },
                "example": {"currentPage":1,"pageSize":10,"hasNextPage":true,"data":[{"location":{"id":10,"label":"Downtown Store","slug":"downtown-store-ny","merchantId":50,"managerId":100,"active":true,"address":{"lineOne":"456 Broadway","lineTwo":null,"city":"New York","state":"NY","zip":"10001","timezone":"America/New_York"},"externalId":"EXT-12345","phoneNumber":"+1 212-555-0199","localizationsId":1,"isFranchise":true},"incidents":{"total":15,"seen":12,"replied":10,"satisfied":8,"recovered":7}},{"location":{"id":20,"label":"Westside Branch","slug":"westside-la","merchantId":60,"managerId":200,"active":true,"address":{"lineOne":"789 Sunset Blvd","lineTwo":null,"city":"Los Angeles","state":"CA","zip":"90028","timezone":"America/Los_Angeles"},"externalId":"EXT-67890","phoneNumber":"+1 310-555-0156","localizationsId":2,"isFranchise":false},"incidents":{"total":20,"seen":18,"replied":15,"satisfied":12,"recovered":10}}]}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      }
    },
    "/merchant-webhook-subscriptions": {
      "get": {
        "tags": [
          "Merchant Webhook Subscriptions"
        ],
        "summary": "Get webhook subscriptions by merchant id",
        "parameters": [
          {
            "name": "merchantId",
            "in": "query",
            "description": "The unique identifier of the merchant for which webhook subscriptions are being retrieved.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MerchantWebhookSubscriptionsResponse"
                },
                "example": {"merchantId":10,"webhookUrl":"https://my-webhook-url.com/api/event","subscriptions":["merchant_access_approved","merchant_access_rejected","merchant_access_removed","location_created","location_updated","questionnaire_created","questionnaire_updated","survey_created"]}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.3","title":"Forbidden","status":403,"detail":"You do not have sufficient permissions to access this resource. Please contact your administrator if you believe this is an error."}
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Merchant Webhook Subscriptions"
        ],
        "summary": "Upsert webhook subscriptions by merchant id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertMerchantWebhookSubscriptionsRequest"
              },
              "example": {"merchantId":10,"subscriptions":["merchant_access_approved","merchant_access_rejected","merchant_access_removed","location_created","location_updated","questionnaire_created","questionnaire_updated","survey_created"]}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertMerchantWebhookSubscriptionsRequest"
              },
              "example": {"merchantId":10,"subscriptions":["merchant_access_approved","merchant_access_rejected","merchant_access_removed","location_created","location_updated","questionnaire_created","questionnaire_updated","survey_created"]}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertMerchantWebhookSubscriptionsRequest"
              },
              "example": {"merchantId":10,"subscriptions":["merchant_access_approved","merchant_access_rejected","merchant_access_removed","location_created","location_updated","questionnaire_created","questionnaire_updated","survey_created"]}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MerchantWebhookSubscriptionsResponse"
                },
                "example": {"merchantId":10,"webhookUrl":"https://my-webhook-url.com/api/event","subscriptions":["merchant_access_approved","merchant_access_rejected","merchant_access_removed","location_created","location_updated","questionnaire_created","questionnaire_updated","survey_created"]}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.3","title":"Forbidden","status":403,"detail":"You do not have sufficient permissions to access this resource. Please contact your administrator if you believe this is an error."}
              }
            }
          }
        }
      }
    },
    "/merchants": {
      "get": {
        "tags": [
          "Merchants"
        ],
        "summary": "Get paginated merchants",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMerchantResponsePageResponse"
                },
                "example": {"currentPage":1,"pageSize":25,"hasNextPage":true,"data":[{"id":10,"name":"My Business Name"}],"total":null,"totalPages":null}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.3","title":"Forbidden","status":403,"detail":"You do not have sufficient permissions to access this resource. Please contact your administrator if you believe this is an error."}
              }
            }
          }
        }
      }
    },
    "/merchants/{merchantId}": {
      "get": {
        "tags": [
          "Merchants"
        ],
        "summary": "Get merchant by id",
        "parameters": [
          {
            "name": "merchantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMerchantResponse"
                },
                "example": {"id":10,"name":"My Business Name"}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.3","title":"Forbidden","status":403,"detail":"You do not have sufficient permissions to access this resource. Please contact your administrator if you believe this is an error."}
              }
            }
          }
        }
      }
    },
    "/objectives": {
      "get": {
        "tags": [
          "Objectives"
        ],
        "summary": "Get paginated objectives",
        "parameters": [
          {
            "name": "MerchantId",
            "in": "query",
            "description": "Filter objectives using a merchant id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "LocationId",
            "in": "query",
            "description": "Filter objectives using a location id.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Month",
            "in": "query",
            "description": "Filter objectives by month",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Year",
            "in": "query",
            "description": "Filter objectives by year",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetObjectivesResponsePageResponse"
                },
                "example": {"currentPage":1,"pageSize":25,"hasNextPage":false,"data":[{"merchantId":1,"locationId":2,"snapshotId":1,"month":6,"year":2025,"startingCustomerExperienceRating":82,"startingSnapshotRating":75,"customerExperienceRating":83,"snapshotRating":80,"targetSnapshotRating":85}],"total":1,"totalPages":1}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      }
    },
    "/online-reviews": {
      "get": {
        "tags": [
          "Online Reviews"
        ],
        "summary": "Get paginated online reviews",
        "parameters": [
          {
            "name": "MerchantId",
            "in": "query",
            "description": "Filter online reviews using a merchant id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "LocationId",
            "in": "query",
            "description": "Filter online reviews using a location id.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartDateUtc",
            "in": "query",
            "description": "Filter online reviews at or after the start date",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDateUtc",
            "in": "query",
            "description": "Filter online reviews at or before the end date",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOnlineReviewsResponsePageResponse"
                },
                "example": {"currentPage":1,"pageSize":25,"hasNextPage":false,"data":[{"id":1,"locationId":2,"merchantId":1,"provider":"GOOGLE","rating":5,"date":"2025-06-26T00:52:19.5302736Z","reviewer":"John Smith","text":"Great experience!","url":"https://www.url.com","responses":[{"id":10,"date":"2025-06-27T00:52:19.5302916Z","text":"Thank you!","userId":5,"status":"PUBLISHED"}]}],"total":1,"totalPages":1}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get orders",
        "parameters": [
          {
            "name": "LocationId",
            "in": "query",
            "description": "The unique identifier of the location for which orders are being retrieved.\r\nIf null, orders for all locations may be returned.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PartnerRef",
            "in": "query",
            "description": "A required reference identifier for the partner associated with the orders.\r\nThis could be used to filter orders for a specific partner or integration.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrderId",
            "in": "query",
            "description": "A required unique identifier for a specific order.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "StartDateUtc",
            "in": "query",
            "description": "The start date and time (in UTC) of the period for which orders should be retrieved.\r\nIf null, no lower bound on the order date is applied.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDateUtc",
            "in": "query",
            "description": "The end date and time (in UTC) of the period for which orders should be retrieved.\r\nIf null, no upper bound on the order date is applied.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "MerchantId",
            "in": "query",
            "description": "The unique identifier of the merchant associated with this request.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrdersResponse"
                },
                "example": {"orders":[{"merchantId":1001,"locationId":5001,"partnerRef":"PARTNER-REF-001","orderId":"ORDER-001","orderPlacedUtc":"2025-06-26T22:52:19.5861783+00:00","orderCompletedUtc":"2025-06-26T23:52:19.5861905+00:00","total":59.99,"surveyId":10001},{"merchantId":1002,"locationId":5002,"partnerRef":"PARTNER-REF-002","orderId":"ORDER-002","orderPlacedUtc":"2025-06-26T21:52:19.5862145+00:00","orderCompletedUtc":null,"total":129.50,"surveyId":null},{"merchantId":1001,"locationId":5003,"partnerRef":"PARTNER-REF-003","orderId":"ORDER-003","orderPlacedUtc":"2025-06-26T23:52:19.5862148+00:00","orderCompletedUtc":"2025-06-27T00:22:19.586215+00:00","total":25.00,"surveyId":10002}]}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Create an order to send a feedback request",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderRequest"
              },
              "example": {"locationId":20,"externalLocationId":"externalLocationId123","channelId":null,"customer":{"firstName":"John","lastName":"Smith","emailAddress":"johnsmith@email.com","phoneNumber":"123-123-1234"},"transaction":{"orderId":"28f721c0-88b9-4dd2-8c14-2786efe9db01","orderPlacedUtc":"2025-06-26T23:52:19.6265761+00:00","orderCompletedUtc":"2025-06-27T00:52:19.6265888+00:00","scheduledFulfillmentUtc":"2025-06-27T01:22:19.6265889+00:00","total":20.99,"items":[{"itemId":"12345","name":"Menu Item Name","cost":20.50,"modifiers":[{"modifierId":"23456","name":"Modifier Name"}]}]},"deliveryService":{"partnerId":23},"merchantId":10}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderRequest"
              },
              "example": {"locationId":20,"externalLocationId":"externalLocationId123","channelId":null,"customer":{"firstName":"John","lastName":"Smith","emailAddress":"johnsmith@email.com","phoneNumber":"123-123-1234"},"transaction":{"orderId":"28f721c0-88b9-4dd2-8c14-2786efe9db01","orderPlacedUtc":"2025-06-26T23:52:19.6265761+00:00","orderCompletedUtc":"2025-06-27T00:52:19.6265888+00:00","scheduledFulfillmentUtc":"2025-06-27T01:22:19.6265889+00:00","total":20.99,"items":[{"itemId":"12345","name":"Menu Item Name","cost":20.50,"modifiers":[{"modifierId":"23456","name":"Modifier Name"}]}]},"deliveryService":{"partnerId":23},"merchantId":10}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderRequest"
              },
              "example": {"locationId":20,"externalLocationId":"externalLocationId123","channelId":null,"customer":{"firstName":"John","lastName":"Smith","emailAddress":"johnsmith@email.com","phoneNumber":"123-123-1234"},"transaction":{"orderId":"28f721c0-88b9-4dd2-8c14-2786efe9db01","orderPlacedUtc":"2025-06-26T23:52:19.6265761+00:00","orderCompletedUtc":"2025-06-27T00:52:19.6265888+00:00","scheduledFulfillmentUtc":"2025-06-27T01:22:19.6265889+00:00","total":20.99,"items":[{"itemId":"12345","name":"Menu Item Name","cost":20.50,"modifiers":[{"modifierId":"23456","name":"Modifier Name"}]}]},"deliveryService":{"partnerId":23},"merchantId":10}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      }
    },
    "/rewards": {
      "get": {
        "tags": [
          "Rewards"
        ],
        "summary": "Get paginated rewards",
        "parameters": [
          {
            "name": "MerchantId",
            "in": "query",
            "description": "The unique identifier of the merchant for which rewards are being retrieved.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRewardsResponsePageResponse"
                },
                "example": {"currentPage":1,"pageSize":25,"hasNextPage":false,"data":[{"id":1,"label":"Reward Name","description":"More detail about the reward","disclaimers":"Any disclaimers the customer should know","isRedemptionRequired":true,"isArchived":false,"instructions":"Redemption instructions for the customer"},{"id":2,"label":"Another Reward","description":"More detail about the reward","disclaimers":"Any disclaimers the customer should know","isRedemptionRequired":false,"isArchived":false,"instructions":"Redemption instructions for the customer"}],"total":null,"totalPages":null}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      }
    },
    "/rewards/{rewardId}": {
      "get": {
        "tags": [
          "Rewards"
        ],
        "summary": "Get reward by id",
        "parameters": [
          {
            "name": "rewardId",
            "in": "path",
            "description": "The reward unique identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRewardsResponse"
                },
                "example": {"id":1,"label":"Reward Name","description":"More detail about the reward","disclaimers":"Any disclaimers the customer should know","isRedemptionRequired":true,"isArchived":false,"instructions":"Redemption instructions for the customer"}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      }
    },
    "/reward-codes/{rewardId}": {
      "get": {
        "tags": [
          "Rewards"
        ],
        "summary": "Get paginated reward codes for a given reward",
        "parameters": [
          {
            "name": "rewardId",
            "in": "path",
            "description": "The reward unique identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MerchantId",
            "in": "query",
            "description": "The unique identifier of the merchant for which rewards are being retrieved.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRewardsCodesResponsePageResponse"
                },
                "example": {"currentPage":1,"pageSize":25,"hasNextPage":false,"data":[{"id":1,"code":"123abc","rewardId":3,"isRedeemed":true,"dateTimeRedeemed":"2024-11-18T12:15:02","dateTimeAssigned":"2024-10-18T12:15:02","dateTimeExpired":"2024-12-18T12:15:02"},{"id":2,"code":"456def","rewardId":3,"isRedeemed":false,"dateTimeRedeemed":null,"dateTimeAssigned":"2024-10-19T10:45:02","dateTimeExpired":"2024-12-19T13:19:06"},{"id":3,"code":"789ghi","rewardId":3,"isRedeemed":false,"dateTimeRedeemed":null,"dateTimeAssigned":"2024-08-02T18:05:02","dateTimeExpired":"2024-10-02T18:05:02"}],"total":null,"totalPages":null}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      }
    },
    "/reward-codes/{rewardCode}/redeem": {
      "put": {
        "tags": [
          "Rewards"
        ],
        "summary": "Redeem a reward",
        "parameters": [
          {
            "name": "rewardCode",
            "in": "path",
            "description": "The customer's reward code for the reward they're redeeming",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RedeemRewardRequest"
              },
              "example": {"merchantId":1234,"rewardId":15,"amount":9.95}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RedeemRewardRequest"
              },
              "example": {"merchantId":1234,"rewardId":15,"amount":9.95}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RedeemRewardRequest"
              },
              "example": {"merchantId":1234,"rewardId":15,"amount":9.95}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedeemRewardResponse"
                },
                "example": {"id":1,"label":"Reward Label","rewardsCode":"abc123","isRedeemed":true,"redemptionTime":"2024-12-21T12:30:02"}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.4","title":"Resource Not Found","status":404,"detail":"The requested resource does not exist or has been moved. Please verify the URL and try again."}
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.8","title":"Conflict","status":409,"detail":"The request conflicts with the current state of the resource. The resource may have been modified by another request."}
              }
            }
          },
          "410": {
            "description": "Gone",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.9","title":"Resource Gone","status":410,"detail":"The requested resource is no longer available and has been permanently removed. This condition is expected to be permanent."}
              }
            }
          }
        }
      }
    },
    "/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get paginated roles",
        "parameters": [
          {
            "name": "MerchantId",
            "in": "query",
            "description": "The unique identifier of the merchant for whom roles are being retrieved.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRolesResponsePageResponse"
                },
                "example": {"currentPage":1,"pageSize":25,"hasNextPage":false,"data":[{"id":4,"title":"Store Manager","description":"Responsible for day-to-day operations of a location and its staff and customers"},{"id":5,"title":"Team Member","description":"A person employed with the ability to log in to a merchant location and operate at a non-executive level."},{"id":12,"title":"Merchant Admin","description":"All the various C-Level Corporate executives, including COO, CTO, CFO and CEO."},{"id":19,"title":"Tattle Survey Responder","description":"Able to respond to customers that have left a Tattle survey."}],"total":4,"totalPages":1}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      }
    },
    "/roles/{roleId}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get role by id",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "The role unique identifier",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRolesResponse"
                },
                "example": {"id":4,"title":"Store Manager","description":"Responsible for day-to-day operations of a location and its staff and customers"}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      }
    },
    "/snapshots": {
      "get": {
        "tags": [
          "Snapshots"
        ],
        "summary": "Get paginated snapshots",
        "parameters": [
          {
            "name": "MerchantId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSnapshotsResponsePageResponse"
                },
                "example": {"currentPage":1,"pageSize":25,"hasNextPage":false,"data":[{"id":1,"label":"Speed of Service","description":null,"questionText":"How satisfied are you with the overall speed of service?","reasons":[{"id":1,"label":"Delivery On Time"},{"id":2,"label":"Estimated Delivery Time"}]}],"total":null,"totalPages":null}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      }
    },
    "/surveys": {
      "get": {
        "tags": [
          "Surveys"
        ],
        "summary": "Get paginated surveys",
        "parameters": [
          {
            "name": "ExperienceStartDate",
            "in": "query",
            "description": "Full-date notation as defined by RFC 3339, section 5.6, for example, 2017-07-21",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "ExperienceEndDate",
            "in": "query",
            "description": "Full-date notation as defined by RFC 3339, section 5.6, for example, 2017-07-21",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "CreatedStartDate",
            "in": "query",
            "description": "Full-date notation as defined by RFC 3339, section 5.6, for example, 2017-07-21",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "CreatedEndDate",
            "in": "query",
            "description": "Full-date notation as defined by RFC 3339, section 5.6, for example, 2017-07-21",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "MerchantId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "LocationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SurveyId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "QuestionnaireId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveysDtoPageResponse"
                },
                "example": {"currentPage":1,"pageSize":25,"hasNextPage":false,"data":[{"id":1000,"questionnaireId":1234,"orderId":"abcd-123-0a","locationId":20,"channelId":1,"createdDateTimeUtc":"2025-06-27T00:52:19.7599642+00:00","experienceDateTimeLocal":"2025-06-26T23:52:19.7599657+00:00","rating":5,"score":100,"phoneNumber":null,"emailAddress":null,"snapshots":[{"snapshotId":1001,"label":"Speed of Service","rating":5,"comment":"Service was so fast!","reasons":[{"reasonId":1002,"label":"Wait Time","impact":1}]}],"questions":[{"questionId":600,"questionText":"Would you eat at this location again?","answerId":700,"answerText":"Of course!"}]}],"total":null,"totalPages":null}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      }
    },
    "/surveys/send-feedback-request": {
      "post": {
        "tags": [
          "Surveys"
        ],
        "summary": "Send a feedback request",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendFeedbackRequest"
              },
              "example": {"locationId":1234,"merchantId":5678,"channelId":91011,"questionnaireId":121314,"customer":{"firstName":"John","lastName":"Doe","emailAddress":"john.doe@example.com","phoneNumber":"+1234567890"}}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SendFeedbackRequest"
              },
              "example": {"locationId":1234,"merchantId":5678,"channelId":91011,"questionnaireId":121314,"customer":{"firstName":"John","lastName":"Doe","emailAddress":"john.doe@example.com","phoneNumber":"+1234567890"}}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SendFeedbackRequest"
              },
              "example": {"locationId":1234,"merchantId":5678,"channelId":91011,"questionnaireId":121314,"customer":{"firstName":"John","lastName":"Doe","emailAddress":"john.doe@example.com","phoneNumber":"+1234567890"}}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              },
              "example": {"merchantId":1001,"first":"John","last":"Doe","email":"john.doe@example.com","phone":"+1 (555) 123-4567","userType":"Single","locationId":42,"makeLocationManager":true,"groupIds":[1,2,3],"roleIds":[4,5,6]}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              },
              "example": {"merchantId":1001,"first":"John","last":"Doe","email":"john.doe@example.com","phone":"+1 (555) 123-4567","userType":"Single","locationId":42,"makeLocationManager":true,"groupIds":[1,2,3],"roleIds":[4,5,6]}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              },
              "example": {"merchantId":1001,"first":"John","last":"Doe","email":"john.doe@example.com","phone":"+1 (555) 123-4567","userType":"Single","locationId":42,"makeLocationManager":true,"groupIds":[1,2,3],"roleIds":[4,5,6]}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersResponse"
                },
                "example": {"id":12345,"first":"Jane","last":"Smith","email":"jane.smith@example.com","phone":"+1 (555) 987-6543","locationId":789,"groupIds":[10,20,30],"isLocationManager":true,"userType":"Single","message":"User retrieved successfully","roleIds":null}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.8","title":"Conflict","status":409,"detail":"The request conflicts with the current state of the resource. The resource may have been modified by another request."}
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get users",
        "parameters": [
          {
            "name": "MerchantId",
            "in": "query",
            "description": "The unique identifier of the merchant for which users are being retrieved.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "maximum": 200,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 25
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersResponsePageResponse"
                },
                "example": {"currentPage":1,"pageSize":25,"hasNextPage":false,"data":[{"id":1001,"first":"Alice","last":"Johnson","email":"alice.johnson@example.com","phone":"+1 (555) 111-2222","locationId":100,"groupIds":[1,2,3],"isLocationManager":true,"userType":"Single","message":"User retrieved successfully","roleIds":null},{"id":1002,"first":"Bob","last":"Smith","email":"bob.smith@example.com","phone":null,"locationId":null,"groupIds":[4,5],"isLocationManager":false,"userType":"Global","message":"User found with limited information","roleIds":null},{"id":1003,"first":null,"last":null,"email":"anonymous@example.com","phone":"+1 (555) 333-4444","locationId":200,"groupIds":null,"isLocationManager":false,"userType":"Single","message":"Partial user data retrieved","roleIds":null}],"total":3,"totalPages":1}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      }
    },
    "/users/{userId}/activate": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Activate a User",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID to be activated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              },
              "example": {"userId":10,"merchantId":1}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              },
              "example": {"userId":10,"merchantId":1}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              },
              "example": {"userId":10,"merchantId":1}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersResponse"
                },
                "example": {"id":12345,"first":"Jane","last":"Smith","email":"jane.smith@example.com","phone":"+1 (555) 987-6543","locationId":789,"groupIds":[10,20,30],"isLocationManager":true,"userType":"Single","message":"User retrieved successfully","roleIds":null}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.4","title":"Resource Not Found","status":404,"detail":"The requested resource does not exist or has been moved. Please verify the URL and try again."}
              }
            }
          }
        }
      }
    },
    "/users/{userId}/deactivate": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Deactivate a User",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID to be deactivated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              },
              "example": {"userId":10,"merchantId":1}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              },
              "example": {"userId":10,"merchantId":1}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              },
              "example": {"userId":10,"merchantId":1}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersResponse"
                },
                "example": {"id":12345,"first":"Jane","last":"Smith","email":"jane.smith@example.com","phone":"+1 (555) 987-6543","locationId":789,"groupIds":[10,20,30],"isLocationManager":true,"userType":"Single","message":"User retrieved successfully","roleIds":null}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.4","title":"Resource Not Found","status":404,"detail":"The requested resource does not exist or has been moved. Please verify the URL and try again."}
              }
            }
          }
        }
      }
    },
    "/users/{userId}/assign-location": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Assigns a location to a user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserAssignedLocationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserAssignedLocationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserAssignedLocationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersResponse"
                },
                "example": {"id":12345,"first":"Jane","last":"Smith","email":"jane.smith@example.com","phone":"+1 (555) 987-6543","locationId":789,"groupIds":[10,20,30],"isLocationManager":true,"userType":"Single","message":"User retrieved successfully","roleIds":null}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.4","title":"Resource Not Found","status":404,"detail":"The requested resource does not exist or has been moved. Please verify the URL and try again."}
              }
            }
          }
        }
      }
    },
    "/users/{userId}/unassign-location": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Removes the assigned location from the user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserAssignedLocationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserAssignedLocationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserAssignedLocationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUsersResponse"
                },
                "example": {"id":12345,"first":"Jane","last":"Smith","email":"jane.smith@example.com","phone":"+1 (555) 987-6543","locationId":789,"groupIds":[10,20,30],"isLocationManager":true,"userType":"Single","message":"User retrieved successfully","roleIds":null}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.4","title":"Resource Not Found","status":404,"detail":"The requested resource does not exist or has been moved. Please verify the URL and try again."}
              }
            }
          }
        }
      }
    },
    "/webhook-subscriptions": {
      "get": {
        "tags": [
          "Webhook Subscriptions"
        ],
        "summary": "Get webhook subscription values",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookSubscriptionsResponse"
                },
                "example": {"partnerSubscriptions":["merchant_access_approved","merchant_access_rejected","merchant_access_removed"],"merchantSubscriptions":["location_created","location_updated","questionnaire_created","questionnaire_updated","survey_created"]}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      }
    },
    "/webhook-subscription-settings": {
      "get": {
        "tags": [
          "Webhook Subscriptions"
        ],
        "summary": "Get partner's webhook subscription settings",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnerWebhookSettingsResponse"
                },
                "example": {"webhookUrl":"https://my-webhook-url.com/api/event","webhookAuthorizationHeaderValue":"9fd124b4-e179-4c18-b60d-132619c61a39","subscriptions":["merchant_access_approved","merchant_access_rejected","merchant_access_removed"]}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Webhook Subscriptions"
        ],
        "summary": "Upsert webhook subscription settings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertWebhookSettingsRequest"
              },
              "example": {"webhookUrl":"https://my-webhook-url.com/api/event","webhookAuthorizationHeaderValue":"254294a6-c039-42a5-a936-2638bd977724","subscriptions":["merchant_access_approved","merchant_access_rejected","merchant_access_removed"]}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertWebhookSettingsRequest"
              },
              "example": {"webhookUrl":"https://my-webhook-url.com/api/event","webhookAuthorizationHeaderValue":"254294a6-c039-42a5-a936-2638bd977724","subscriptions":["merchant_access_approved","merchant_access_rejected","merchant_access_removed"]}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertWebhookSettingsRequest"
              },
              "example": {"webhookUrl":"https://my-webhook-url.com/api/event","webhookAuthorizationHeaderValue":"254294a6-c039-42a5-a936-2638bd977724","subscriptions":["merchant_access_approved","merchant_access_rejected","merchant_access_removed"]}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7231#section-6.5.1","title":"Bad Request","status":400,"detail":"The request could not be processed due to invalid input."}
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "example": {"type":"https://tools.ietf.org/html/rfc7235#section-3.1","title":"Unauthorized","status":401,"detail":"Authentication credentials are missing or invalid. Please provide valid authentication credentials."}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActivateLocationRequest": {
        "type": "object",
        "properties": {
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AddLocationToGroupRequest": {
        "type": "object",
        "properties": {
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "groupId": {
            "type": "integer",
            "format": "int32"
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AddManagerToLocationRequest": {
        "type": "object",
        "properties": {
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "managerId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AddUserToGroupRequest": {
        "type": "object",
        "properties": {
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "groupId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Address": {
        "type": "object",
        "properties": {
          "lineOne": {
            "type": "string",
            "nullable": true
          },
          "lineTwo": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "timezone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthenticationRequest": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AuthenticationResponse": {
        "required": [
          "accessToken",
          "expiresIn",
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "accessToken": {
            "minLength": 1,
            "type": "string"
          },
          "expiresIn": {
            "type": "integer",
            "format": "int32"
          },
          "refreshToken": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ChangePasswordRequest": {
        "required": [
          "newPassword",
          "oldPassword"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "oldPassword": {
            "minLength": 1,
            "type": "string"
          },
          "newPassword": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CreateLocationRequest": {
        "required": [
          "address",
          "label",
          "slug"
        ],
        "type": "object",
        "properties": {
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "minLength": 1,
            "type": "string"
          },
          "slug": {
            "minLength": 1,
            "type": "string"
          },
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "isFranchise": {
            "type": "boolean"
          },
          "address": {
            "$ref": "#/components/schemas/LocationAddress"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "localizationsId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CreateOrderRequest": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "externalLocationId": {
            "type": "string",
            "nullable": true
          },
          "channelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "transaction": {
            "$ref": "#/components/schemas/Transaction"
          },
          "deliveryService": {
            "$ref": "#/components/schemas/DeliveryService"
          },
          "merchantId": {
            "type": "integer",
            "description": "The unique identifier of the merchant associated with this request.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateUserRequest": {
        "type": "object",
        "properties": {
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "first": {
            "type": "string",
            "nullable": true
          },
          "last": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "userType": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "makeLocationManager": {
            "type": "boolean"
          },
          "groupIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "roleIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Customer": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DeactivateLocationRequest": {
        "type": "object",
        "properties": {
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DeleteGroupRequest": {
        "type": "object",
        "properties": {
          "merchantId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "DeliveryService": {
        "type": "object",
        "properties": {
          "partnerId": {
            "type": "integer",
            "description": "Tattle's unique partner id for the delivery service provider",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetChannelsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetChannelsResponsePageResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetChannelsResponse"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetGroupsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "slug": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "private": {
            "type": "boolean",
            "nullable": true
          },
          "locationIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetGroupsResponsePageResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetGroupsResponse"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetIncidentStatisticsResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentsForLocation"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetLocalizationCodeResponse": {
        "type": "object",
        "properties": {
          "localizationsId": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetLocalizationCodeResponsePageResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetLocalizationCodeResponse"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetLocationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "slug": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "managerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "localizationsId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isFranchise": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GetLocationResponsePageResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetLocationResponse"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetMerchantResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetMerchantResponsePageResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetMerchantResponse"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetObjectivesResponse": {
        "type": "object",
        "properties": {
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "snapshotId": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "startingCustomerExperienceRating": {
            "type": "number",
            "description": "The customer experience rating at the beginning of the objective",
            "format": "double",
            "nullable": true
          },
          "startingSnapshotRating": {
            "type": "number",
            "description": "The snapshot's rating at the beginning of the objective",
            "format": "double",
            "nullable": true
          },
          "customerExperienceRating": {
            "type": "number",
            "description": "The current or final customer experience rating for the objective",
            "format": "double",
            "nullable": true
          },
          "snapshotRating": {
            "type": "number",
            "description": "The current or final snapshot rating for the objective",
            "format": "double",
            "nullable": true
          },
          "targetSnapshotRating": {
            "type": "number",
            "description": "The target snapshot rating for the objective",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetObjectivesResponsePageResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetObjectivesResponse"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetOnlineReviewsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "provider": {
            "type": "string",
            "nullable": true
          },
          "rating": {
            "type": "number",
            "format": "double"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "reviewer": {
            "type": "string",
            "nullable": true
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "responses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Response"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetOnlineReviewsResponsePageResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetOnlineReviewsResponse"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetOrderResponse": {
        "type": "object",
        "properties": {
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "locationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "partnerRef": {
            "type": "string",
            "nullable": true
          },
          "orderId": {
            "type": "string",
            "nullable": true
          },
          "orderPlacedUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderCompletedUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "total": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "surveyId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetOrdersResponse": {
        "type": "object",
        "properties": {
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetOrderResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetPartnerResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "ref": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetPartnerResponsePageResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetPartnerResponse"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetRewardsCodesResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "rewardId": {
            "type": "integer",
            "format": "int32"
          },
          "isRedeemed": {
            "type": "boolean"
          },
          "dateTimeRedeemed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateTimeAssigned": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateTimeExpired": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetRewardsCodesResponsePageResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetRewardsCodesResponse"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetRewardsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "disclaimers": {
            "type": "string",
            "nullable": true
          },
          "isRedemptionRequired": {
            "type": "boolean",
            "nullable": true
          },
          "isArchived": {
            "type": "boolean"
          },
          "instructions": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetRewardsResponsePageResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetRewardsResponse"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetRolesResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetRolesResponsePageResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetRolesResponse"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetSnapshotsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "questionText": {
            "type": "string",
            "nullable": true
          },
          "reasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reason"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetSnapshotsResponsePageResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetSnapshotsResponse"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "GetUsersResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "first": {
            "type": "string",
            "nullable": true
          },
          "last": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "groupIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "isLocationManager": {
            "type": "boolean"
          },
          "userType": {
            "$ref": "#/components/schemas/UserType"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "roleIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetUsersResponsePageResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetUsersResponse"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IncidentDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "uid": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rewardCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RewardCodesDto"
            },
            "nullable": true
          },
          "survey": {
            "$ref": "#/components/schemas/SurveysDto"
          },
          "dateTimeReviewedUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateTimeMessagedUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateTimeResolvedUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateTimeRecoveredUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateTimeNotificationUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IncidentDtoPageResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncidentDto"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Incidents": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "seen": {
            "type": "integer",
            "format": "int32"
          },
          "replied": {
            "type": "integer",
            "format": "int32"
          },
          "satisfied": {
            "type": "integer",
            "format": "int32"
          },
          "recovered": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "IncidentsForLocation": {
        "required": [
          "incidents",
          "location"
        ],
        "type": "object",
        "properties": {
          "location": {
            "$ref": "#/components/schemas/GetLocationResponse"
          },
          "incidents": {
            "$ref": "#/components/schemas/Incidents"
          }
        },
        "additionalProperties": false
      },
      "Item": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "string",
            "description": "A unique identifier assigned from the system that created the order",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the item ordered",
            "nullable": true
          },
          "cost": {
            "type": "number",
            "description": "The cost of the item ordered",
            "format": "double"
          },
          "modifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Modifier"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LocationAddress": {
        "required": [
          "city"
        ],
        "type": "object",
        "properties": {
          "lineOne": {
            "type": "string",
            "nullable": true
          },
          "lineTwo": {
            "type": "string",
            "nullable": true
          },
          "lineThree": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "minLength": 1,
            "type": "string"
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "district": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MerchantWebhookSubscriptionsResponse": {
        "type": "object",
        "properties": {
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "webhookUrl": {
            "type": "string",
            "nullable": true
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Modifier": {
        "type": "object",
        "properties": {
          "modifierId": {
            "type": "string",
            "description": "A unique identifier assigned from the system that created the order",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the modifier",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PartnerWebhookSettingsResponse": {
        "type": "object",
        "properties": {
          "webhookUrl": {
            "type": "string",
            "nullable": true
          },
          "webhookAuthorizationHeaderValue": {
            "type": "string",
            "nullable": true
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "Question": {
        "type": "object",
        "properties": {
          "questionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "questionText": {
            "type": "string",
            "nullable": true
          },
          "answerId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "answerText": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Reason": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RedeemRewardRequest": {
        "type": "object",
        "properties": {
          "merchantId": {
            "type": "integer",
            "description": "The unique identifier of the merchant for which rewards are being redeemed.",
            "format": "int32"
          },
          "rewardId": {
            "type": "integer",
            "description": "The unique identifier of the reward that is being redeemed.",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "description": "The (optional) total of the guest check. Entering this data helps with redemption statistics.",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RedeemRewardResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "rewardsCode": {
            "type": "string",
            "nullable": true
          },
          "isRedeemed": {
            "type": "boolean"
          },
          "redemptionTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RefreshTokenRequest": {
        "required": [
          "email",
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "refreshToken": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RemoveLocationFromGroupRequest": {
        "type": "object",
        "properties": {
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "groupId": {
            "type": "integer",
            "format": "int32"
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RemoveManagerFromLocationRequest": {
        "type": "object",
        "properties": {
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          },
          "managerId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RemoveUserFromGroupRequest": {
        "type": "object",
        "properties": {
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "groupId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Response": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "text": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RewardCodesDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "rewardId": {
            "type": "integer",
            "format": "int32"
          },
          "isRedeemed": {
            "type": "boolean"
          },
          "dateTimeRedeemedUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateTimeAssignedUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateTimeExpiredUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SendFeedbackRequest": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "channelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "questionnaireId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          }
        },
        "additionalProperties": false
      },
      "Snapshot": {
        "type": "object",
        "properties": {
          "snapshotId": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "rating": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "reasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SnapshotReasons"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SnapshotReasons": {
        "type": "object",
        "properties": {
          "reasonId": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "impact": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SurveysDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "questionnaireId": {
            "type": "integer",
            "format": "int32"
          },
          "orderId": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "channelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "createdDateTimeUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "experienceDateTimeLocal": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rating": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "score": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "phoneNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "snapshots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Snapshot"
            },
            "nullable": true
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Question"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SurveysDtoPageResponse": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasNextPage": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveysDto"
            },
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalPages": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "A unique identifier assigned from the system that created the order",
            "nullable": true
          },
          "orderPlacedUtc": {
            "type": "string",
            "description": "A required ISO-8601 UTC date and time for when the order was placed",
            "format": "date-time"
          },
          "orderCompletedUtc": {
            "type": "string",
            "description": "A required ISO-8601 UTC date and time for when the order was completed",
            "format": "date-time"
          },
          "scheduledFulfillmentUtc": {
            "type": "string",
            "description": "A required ISO-8601 UTC date and time for when the future order will be supplied",
            "format": "date-time",
            "nullable": true
          },
          "total": {
            "type": "number",
            "description": "The total amount for the order",
            "format": "double"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateLocationRequest": {
        "type": "object",
        "properties": {
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "slug": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/LocationAddress"
          },
          "localizationsId": {
            "type": "integer",
            "format": "int32"
          },
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "isFranchise": {
            "type": "boolean"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateUserAssignedLocationRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "locationId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "merchantId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpsertGroupRequest": {
        "required": [
          "label",
          "merchantId",
          "slug"
        ],
        "type": "object",
        "properties": {
          "label": {
            "minLength": 1,
            "type": "string"
          },
          "slug": {
            "minLength": 1,
            "type": "string"
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "private": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpsertMerchantWebhookSubscriptionsRequest": {
        "type": "object",
        "properties": {
          "merchantId": {
            "type": "integer",
            "format": "int32"
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpsertWebhookSettingsRequest": {
        "type": "object",
        "properties": {
          "webhookUrl": {
            "type": "string",
            "nullable": true
          },
          "webhookAuthorizationHeaderValue": {
            "type": "string",
            "nullable": true
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "WebhookSubscriptionsResponse": {
        "type": "object",
        "properties": {
          "partnerSubscriptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "merchantSubscriptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "BearerTokenAuthorizationScheme": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. <BR/>\n                              Enter 'Bearer' [space] and then your token in the text input below.<BR/>\n                              Example: 'Bearer 12345abcdef'",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "BearerTokenAuthorizationScheme": [ ]
    }
  ]
}